---
title: "POO et Documentation - TP1"
description: "Modules, style de code, exceptions et tests"
author: "Ludovic Deneuville"
format: 
  html:
    toc: true
    toc-location: left
    toc-expand: 3
from: markdown+emoji
number-sections: true
number-depth: 3
---

## Créer l'arborscence

```
└── P
    └── Cours1A
        └── IPOO
            ├── TP1
            │   ├── Exercice_1
            │   │   └── ex.py
            │   ├── Exercice_2
            │   │   └── ex.py
            │   ├── ...
            │   └── Exercice_7
            │       └── ex.py
            ├── TP2
            │   ├── Exercice_1
            │   │   └── ex.py
            │   ├── Exercice_2
            │   ├── ...
```

Pour prendre la bonne habitude de bien ranger vos fichiers, vous allez créer l'arborscence ci-dessus.  
Vous pouvez créer chaque dossier et fichier à la main, ou utiliser les commandes ci-dessous (mkdir : make directory):

* [ ] Ouvrez `Git Bash`
  * Sur le bureau > clic droit > **Git Bash here**
* [ ] Collez les 2 commandes suivantes (clic droit > Paste ou MAJ+INSER)
  * `mkdir -p /p/Cours1A/IPOO/TP1/Exercice_{1..7}/ && touch /p/Cours1A/IPOO/TP1/Exercice_{1..7}/ex.py`
  * `mkdir -p /p/Cours1A/IPOO/TP2/Exercice_{1..5}/ && touch /p/Cours1A/IPOO/TP2/Exercice_{1..5}/ex.py`

:::{.callout-warning}
:warning: Il est important de stocker vos fichiers dans votre lecteur `P:` et pas sur votre bureau ou votre disque *C:* car vos fichiers risquerait de disparaitre !
:::

## Visual Studio

* [ ] Ouvrez Visual Studio
  * [ ] File > Open Folder
  * [ ] Cliquez une seule fois sur **Exercice_1**
  * [ ] Cliquez sur `Sélectionner un dossier`
    * dans votre *Explorer* à gauche apparait l'arborescence des dossiers et fichiers de **Exercice_1**

## Exercices

* `Flake8` est un [linter](https://openclassrooms.com/fr/courses/7160741-ecrivez-du-code-python-maintenable/7187871-utilisez-des-linters-pour-que-votre-code-reste-propre){.external target="_blank"}. Il vérifie la mise en forme de votre code et <span style="text-decoration: underline; text-decoration-style: wavy; text-decoration-color: red;">souligne en rouge ce qui ne lui plait pas</span>


### Exercice 1

* [ ] téléchargez le fichier `fonctions.py` sur Moodle
* [ ] Collez ce fichier dans `/p/Cours1A/IPOO/TP2/Exercice_1`
* [ ] Allez dans VSCode et ouvrez ce fichier
* [ ] Ouvrez un nouveau *Terminal* (Terminal > New Terminal)


## Template doc

Voici un modèle que vous pouvez utiliser pour documenter vos fonctions

```{.python}
def ma_fonction(param1, param2):
    """description_courte

    description_longue

    Parameters
    ----------
    param1 : type (str, int, float, list...)
        description_param1
    param2 : type
        description_param2

    Returns
    -------
    type_retour
        description_retour

    Examples
    --------
    >>> incluse('psa', 'abcdpsxyz+-012')
    True
    >>> incluse('', 'abcdpsxyz+-012')
    True
    """
    return None


if __name__ == '__main__':
    a = ma_fonction(p1, p2)
    print(a)
```